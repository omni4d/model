# Using the signs from the core and identification fragments, let's assert the
# existence of a person named Owen Campbell by way of example.


# Firstly a sign to represent me, the individual with identity over time
org.omni4d.example.1:
  type: individual

# I'm a person, so my sign is a member of the persons class.
# That's modelled with a tuple
org.omni4d.example.1-persons:
  type: tuple
  objects:
    org.omni4d.core.persons:
      role: class
    org.omni4d.example.1:
      role: member

# Then we need some character_strings for my name(s).
# These are individuals which are members of both the names and character
# string classes.
Owen:
  type: individual

org.omni4d.example.owen-character_strings:
  type: tuple
  objects:
    org.omni4d.core.character_strings:
      role: class
    Owen:
      role: member

org.omni4d.example.owen-names:
  type: tuple
  objects:
    org.omni4d.identification.names:
      role: class
    Owen:
      role: member

# We repeat the pattern for my second name.
Campbell:
  type: individual

org.omni4d.example.campbell-character_strings:
  type: tuple
  objects:
    org.omni4d.core.character_strings:
      role: class
    Campbell:
      role: member

org.omni4d.example.campbell-names:
  type: tuple
  objects:
    org.omni4d.identification.names:
      role: class
    Campbell:
      role: member

# And we repeat it again for my full name.
Owen Campbell:
  type: individual

org.omni4d.example.owen_campbell-character_strings:
  type: tuple
  objects:
    org.omni4d.core.character_strings:
      role: class
    Owen Campbell:
      role: member

org.omni4d.example.owen_campbell-names:
  type: tuple
  objects:
    org.omni4d.identification.names:
      role: class
    Owen Campbell:
      role: member

# The strings Owen and Campbell can be assembled to form my full name
org.omni4d.example.owen-owen_campbell:
  type: tuple
  objects:
    Owen Campbell:
      role: whole
    Owen:
      role: part

org.omni4d.example.campbell-owen_campbell:
  type: tuple
  objects:
    Owen Campbell:
      role: whole
    Campbell:
      role: part

# The two previous tuples are members of the whole_part_tuples class.
org.omni4d.example.classify-owen-owen_campbell:
  type: tuple
  objects:
    org.omni4d.core.whole_part_tuples:
      role: class
    org.omni4d.example.owen-owen_campbell:
      role: member

org.omni4d.example.classify-campbell-owen_campbell:
  type: tuple
  objects:
    org.omni4d.core.whole_part_tuples:
      role: class
    org.omni4d.example.campbell-owen_campbell:
      role: member

# Now we can use a tuple to associate the name with the person
org.omni4d.example.owen_campbell-1:
  type: tuple
  objects:
    org.omni4d.example.1:
      role: named_by
    Owen Campbell:
      role: names

# That tuple is a member of the naming_tuples class
org.omni4d.example.classify-owen_campbell-1:
  type: tuple
  objects:
    org.omni4d.identification.naming_tuples:
      role: class
    org.omni4d.example.owen_campbell-1:
      role: member
